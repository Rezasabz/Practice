#- name: "[TASK 1] Pull required containers"
#  ansible.builtin.command: kubeadm config images pull

- name: Create an Empty file for Kubeadm configuring
  copy:
    content: ""
    dest: /etc/kubernetes/kubeadm-config.yaml
    force: no


- name: Configure container runtime
  blockinfile:
    path: /etc/kubernetes/kubeadm-config.yaml
    block: |
      kind: ClusterConfiguration
      apiVersion: kubeadm.k8s.io/v1beta3
      networking:
        podSubnet: {{ POD_NETWORK_CIDR }}
      ---
      kind: KubeletConfiguration
      apiVersion: kubelet.config.k8s.io/v1beta1
      runtimeRequestTimeout: "15m"
      cgroupDriver: "systemd"
      systemReserved:
        cpu: 100m
        memory: 350M
      kubeReserved:
        cpu: 100m
        memory: 50M
      enforceNodeAllocatable:
      - pods

- name: "[TASK 2] Initialize Kubernetes Cluster"
  ansible.builtin.command: >
    kubeadm init --config /etc/kubernetes/kubeadm-config.yaml --apiserver-advertise-address={{ MASTER_IP }} --pod-network-cidr={{ POD_NETWORK_CIDR }}
  args:
    creates: /etc/kubernetes/admin.conf

- name: Create .kube directory
  become: yes
  become_user: vagrant
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: Copy admin.conf to User's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    remote_src: yes
    owner: vagrant
          
      #- name: Setup kubeconfig for vagrant user
      #  command: "{{ item }}"
      #  with_items:
      #   - mkdir -p /home/vagrant/.kube
      #   - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
      #   - chown vagrant:vagrant /home/vagrant/.kube/config      

- name: "[TASK 3] Deploy Flannel network"
  become: false
  command: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
      #  ansible.builtin.shell: |
      #    kubectl --kubeconfig=/etc/kubernetes/admin.conf --insecure-skip-tls-verify apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: "[TASK 4] Generate and save cluster join command"
  hosts: master
  ansible.builtin.shell: kubeadm token create --print-join-command
  register: join_command

- name: Save join command to file
  hosts: master
  ansible.builtin.copy:
    content: "{{ join_command.stdout }}"
    dest: /joincluster.sh
    mode: '0755'

- name: "[TASK 1] Install sshpass"
  ansible.builtin.apt:
    name: sshpass
    state: present
    update_cache: yes

- name: Enable TCP port 6443 (On Master) is able to connect from Worker
  wait_for: "192.168.56.10 port=6443 timeout=1"

- name: Join worker to cluster
  shell: "{{ hostvars['192.168.56.10'].join_command }} >> node_joined.log"
  args:
    chdir: /home/YOUR_USERPROFILE_NAME
    creates: node_joined.log
